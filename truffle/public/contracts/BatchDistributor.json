{
  "contractName": "BatchDistributor",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "payable",
      "type": "constructor",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "AddressEmptyCode",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "AddressInsufficientBalance",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "emitter",
          "type": "address"
        }
      ],
      "name": "EtherTransferFail",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "FailedInnerCall",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "SafeERC20FailedOperation",
      "type": "error"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BatchDistributor.Transaction[]",
              "name": "txns",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BatchDistributor.Batch",
          "name": "batch",
          "type": "tuple"
        }
      ],
      "name": "distributeEther",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct BatchDistributor.Transaction[]",
              "name": "txns",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct BatchDistributor.Batch",
          "name": "batch",
          "type": "tuple"
        }
      ],
      "name": "distributeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"EtherTransferFail\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchDistributor.Transaction[]\",\"name\":\"txns\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BatchDistributor.Batch\",\"name\":\"batch\",\"type\":\"tuple\"}],\"name\":\"distributeEther\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"components\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct BatchDistributor.Transaction[]\",\"name\":\"txns\",\"type\":\"tuple[]\"}],\"internalType\":\"struct BatchDistributor.Batch\",\"name\":\"batch\",\"type\":\"tuple\"}],\"name\":\"distributeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"0x7761676d69\",\"details\":\"Since we use nested struct objects, we rely on the ABI coder v2. The ABI coder v2 is activated by default since Solidity `v0.8.0`.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EtherTransferFail(address)\":[{\"details\":\"Error that occurs when transferring ether has failed.\",\"params\":{\"emitter\":\"The contract that emits the error.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"You can cut out 10 opcodes in the creation-time EVM bytecode if you declare a constructor `payable`. For more in-depth information see here: https://forum.openzeppelin.com/t/a-collection-of-gas-optimisation-tricks/19966/5.\"},\"distributeEther(((address,uint256)[]))\":{\"details\":\"Distributes ether, denominated in wei, to a predefined batch of recipient addresses.\",\"params\":{\"batch\":\"Nested struct object that contains an array of tuples that contain each a recipient address & ether amount in wei.\"}},\"distributeToken(address,((address,uint256)[]))\":{\"details\":\"Distributes ERC-20 tokens, denominated in their corresponding lowest unit, to a predefined batch of recipient addresses.\",\"params\":{\"batch\":\"Nested struct object that contains an array of tuples that contain each a recipient address & token amount.\",\"token\":\"ERC-20 token contract address.\"}}},\"title\":\"Native and ERC-20 Token Batch Distributor\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"distributeEther(((address,uint256)[]))\":{\"notice\":\"In the event that excessive ether is sent, the residual amount is returned back to the `msg.sender`.\"},\"distributeToken(address,((address,uint256)[]))\":{\"notice\":\"To deal with (potentially) non-compliant ERC-20 tokens that do have no return value, we use the `SafeERC20` library for external calls. Note: Since we cast the token address into the official ERC-20 interface, the use of non-compliant ERC-20 tokens is prevented by design. Nevertheless, we keep this guardrail for security reasons.\"}},\"notice\":\"Helper smart contract for batch sending both native and ERC-20 tokens.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/BatchDistributor.sol\":\"BatchDistributor\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"project:/contracts/BatchDistributor.sol\":{\"keccak256\":\"0xab0d44803c32ab7fe9d541055e0b2c6371bd638142de2c5f1180b8ad6d6752de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9964af70c0c399a53532f215a0d874b81ba6d8f1d24d09cc03af7f4ce029bca\",\"dweb:/ipfs/QmaFKpGVeUwpxTjHCgzTvzBMtJx8be9ypRQX3KsDca4B4H\"]}},\"version\":1}",
  "bytecode": "0x60806040523060485760405162461bcd60e51b815260206004820152601160248201527011195c1b1bde5b595b9d0819985a5b1959607a1b604482015260640160405180910390fd5b61086c806100576000396000f3fe6080604052600436106100295760003560e01c80633bd08a791461002e5780639d0918b514610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610663565b610063565b005b61004e61005e3660046106b3565b610172565b600061006f82806106f0565b905090506000805b828110156100b85761008984806106f0565b828181106100995761009961075f565b90506040020160200135826100ae919061078e565b9150600101610077565b506100db73ffffffffffffffffffffffffffffffffffffffff851633308461031c565b60005b8281101561016b576101636100f385806106f0565b838181106101035761010361075f565b61011992602060409092020190810191506107c8565b61012386806106f0565b848181106101335761013361075f565b905060400201602001358773ffffffffffffffffffffffffffffffffffffffff166103a59092919063ffffffff16565b6001016100de565b5050505050565b600061017e82806106f0565b9050905060005b8181101561028957600061019984806106f0565b838181106101a9576101a961075f565b6101bf92602060409092020190810191506107c8565b73ffffffffffffffffffffffffffffffffffffffff166101df85806106f0565b848181106101ef576101ef61075f565b9050604002016020013560405160006040518083038185875af1925050503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b5050905080610280576040517fdd74906f0000000000000000000000000000000000000000000000000000000081523060048201526024015b60405180910390fd5b50600101610185565b5047801561031757604051600090339083908381818185875af1925050503d80600081146102d3576040519150601f19603f3d011682016040523d82523d6000602084013e6102d8565b606091505b5050905080610315576040517fdd74906f000000000000000000000000000000000000000000000000000000008152306004820152602401610277565b505b505050565b60405173ffffffffffffffffffffffffffffffffffffffff84811660248301528381166044830152606482018390526103159186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103e3565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526044820183905261031791859182169063a9059cbb9060640161035e565b600061040573ffffffffffffffffffffffffffffffffffffffff841683610479565b9050805160001415801561042a57508080602001905181019061042891906107e5565b155b15610317576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610277565b606061048783836000610490565b90505b92915050565b6060814710156104ce576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610277565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516104f79190610807565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b5091509150610549868383610555565b925050505b9392505050565b60608261056a57610565826105e4565b61054e565b815115801561058e575073ffffffffffffffffffffffffffffffffffffffff84163b155b156105dd576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610277565b508061054e565b8051156105f45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73ffffffffffffffffffffffffffffffffffffffff8116811461062657600080fd5b60006020828403121561065d57600080fd5b50919050565b6000806040838503121561067657600080fd5b823561068181610629565b9150602083013567ffffffffffffffff81111561069d57600080fd5b6106a98582860161064b565b9150509250929050565b6000602082840312156106c557600080fd5b813567ffffffffffffffff8111156106dc57600080fd5b6106e88482850161064b565b949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261072557600080fd5b83018035915067ffffffffffffffff82111561074057600080fd5b6020019150600681901b360382131561075857600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8082018082111561048a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156107da57600080fd5b813561054e81610629565b6000602082840312156107f757600080fd5b8151801515811461054e57600080fd5b6000825160005b81811015610828576020818601810151858301520161080e565b50600092019182525091905056fea2646970667358221220fb679be69c523b090f775bb4971c6462c0d73d46c1963003227b8efbccbf3f3764736f6c634300081a0033",
  "deployedBytecode": "0x6080604052600436106100295760003560e01c80633bd08a791461002e5780639d0918b514610050575b600080fd5b34801561003a57600080fd5b5061004e610049366004610663565b610063565b005b61004e61005e3660046106b3565b610172565b600061006f82806106f0565b905090506000805b828110156100b85761008984806106f0565b828181106100995761009961075f565b90506040020160200135826100ae919061078e565b9150600101610077565b506100db73ffffffffffffffffffffffffffffffffffffffff851633308461031c565b60005b8281101561016b576101636100f385806106f0565b838181106101035761010361075f565b61011992602060409092020190810191506107c8565b61012386806106f0565b848181106101335761013361075f565b905060400201602001358773ffffffffffffffffffffffffffffffffffffffff166103a59092919063ffffffff16565b6001016100de565b5050505050565b600061017e82806106f0565b9050905060005b8181101561028957600061019984806106f0565b838181106101a9576101a961075f565b6101bf92602060409092020190810191506107c8565b73ffffffffffffffffffffffffffffffffffffffff166101df85806106f0565b848181106101ef576101ef61075f565b9050604002016020013560405160006040518083038185875af1925050503d8060008114610239576040519150601f19603f3d011682016040523d82523d6000602084013e61023e565b606091505b5050905080610280576040517fdd74906f0000000000000000000000000000000000000000000000000000000081523060048201526024015b60405180910390fd5b50600101610185565b5047801561031757604051600090339083908381818185875af1925050503d80600081146102d3576040519150601f19603f3d011682016040523d82523d6000602084013e6102d8565b606091505b5050905080610315576040517fdd74906f000000000000000000000000000000000000000000000000000000008152306004820152602401610277565b505b505050565b60405173ffffffffffffffffffffffffffffffffffffffff84811660248301528381166044830152606482018390526103159186918216906323b872dd906084015b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103e3565b60405173ffffffffffffffffffffffffffffffffffffffff83811660248301526044820183905261031791859182169063a9059cbb9060640161035e565b600061040573ffffffffffffffffffffffffffffffffffffffff841683610479565b9050805160001415801561042a57508080602001905181019061042891906107e5565b155b15610317576040517f5274afe700000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84166004820152602401610277565b606061048783836000610490565b90505b92915050565b6060814710156104ce576040517fcd786059000000000000000000000000000000000000000000000000000000008152306004820152602401610277565b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516104f79190610807565b60006040518083038185875af1925050503d8060008114610534576040519150601f19603f3d011682016040523d82523d6000602084013e610539565b606091505b5091509150610549868383610555565b925050505b9392505050565b60608261056a57610565826105e4565b61054e565b815115801561058e575073ffffffffffffffffffffffffffffffffffffffff84163b155b156105dd576040517f9996b31500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152602401610277565b508061054e565b8051156105f45780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b73ffffffffffffffffffffffffffffffffffffffff8116811461062657600080fd5b60006020828403121561065d57600080fd5b50919050565b6000806040838503121561067657600080fd5b823561068181610629565b9150602083013567ffffffffffffffff81111561069d57600080fd5b6106a98582860161064b565b9150509250929050565b6000602082840312156106c557600080fd5b813567ffffffffffffffff8111156106dc57600080fd5b6106e88482850161064b565b949350505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261072557600080fd5b83018035915067ffffffffffffffff82111561074057600080fd5b6020019150600681901b360382131561075857600080fd5b9250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b8082018082111561048a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000602082840312156107da57600080fd5b813561054e81610629565b6000602082840312156107f757600080fd5b8151801515811461054e57600080fd5b6000825160005b81811015610828576020818601810151858301520161080e565b50600092019182525091905056fea2646970667358221220fb679be69c523b090f775bb4971c6462c0d73d46c1963003227b8efbccbf3f3764736f6c634300081a0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nativeSrc": "0:357:11",
        "nodeType": "YulBlock",
        "src": "0:357:11",
        "statements": [
          {
            "nativeSrc": "6:3:11",
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "188:167:11",
              "nodeType": "YulBlock",
              "src": "188:167:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "205:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "216:2:11",
                        "nodeType": "YulLiteral",
                        "src": "216:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "198:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:11"
                    },
                    "nativeSrc": "198:21:11",
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:11"
                  },
                  "nativeSrc": "198:21:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "239:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "250:2:11",
                            "nodeType": "YulLiteral",
                            "src": "250:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "235:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:11"
                        },
                        "nativeSrc": "235:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "255:2:11",
                        "nodeType": "YulLiteral",
                        "src": "255:2:11",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "228:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:11"
                    },
                    "nativeSrc": "228:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:11"
                  },
                  "nativeSrc": "228:30:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "278:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "289:2:11",
                            "nodeType": "YulLiteral",
                            "src": "289:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "274:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:11"
                        },
                        "nativeSrc": "274:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:11"
                      },
                      {
                        "hexValue": "4465706c6f796d656e74206661696c6564",
                        "kind": "string",
                        "nativeSrc": "294:19:11",
                        "nodeType": "YulLiteral",
                        "src": "294:19:11",
                        "type": "",
                        "value": "Deployment failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "267:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:11"
                    },
                    "nativeSrc": "267:47:11",
                    "nodeType": "YulFunctionCall",
                    "src": "267:47:11"
                  },
                  "nativeSrc": "267:47:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "267:47:11"
                },
                {
                  "nativeSrc": "323:26:11",
                  "nodeType": "YulAssignment",
                  "src": "323:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "335:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "335:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "346:2:11",
                        "nodeType": "YulLiteral",
                        "src": "346:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "331:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "331:3:11"
                    },
                    "nativeSrc": "331:18:11",
                    "nodeType": "YulFunctionCall",
                    "src": "331:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "323:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "323:4:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb__to_t_string_memory_ptr__fromStack_reversed",
            "nativeSrc": "14:341:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "165:9:11",
                "nodeType": "YulTypedName",
                "src": "165:9:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "179:4:11",
                "nodeType": "YulTypedName",
                "src": "179:4:11",
                "type": ""
              }
            ],
            "src": "14:341:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Deployment failed\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nativeSrc": "0:4452:11",
        "nodeType": "YulBlock",
        "src": "0:4452:11",
        "statements": [
          {
            "nativeSrc": "6:3:11",
            "nodeType": "YulBlock",
            "src": "6:3:11",
            "statements": []
          },
          {
            "body": {
              "nativeSrc": "67:109:11",
              "nodeType": "YulBlock",
              "src": "67:109:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "154:16:11",
                    "nodeType": "YulBlock",
                    "src": "154:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "163:1:11",
                              "nodeType": "YulLiteral",
                              "src": "163:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "166:1:11",
                              "nodeType": "YulLiteral",
                              "src": "166:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "156:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "156:6:11"
                          },
                          "nativeSrc": "156:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "156:12:11"
                        },
                        "nativeSrc": "156:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "156:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "90:5:11",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nativeSrc": "101:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:11"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "108:42:11",
                                "nodeType": "YulLiteral",
                                "src": "108:42:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nativeSrc": "97:3:11",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:11"
                            },
                            "nativeSrc": "97:54:11",
                            "nodeType": "YulFunctionCall",
                            "src": "97:54:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "87:2:11",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:11"
                        },
                        "nativeSrc": "87:65:11",
                        "nodeType": "YulFunctionCall",
                        "src": "87:65:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "80:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:11"
                    },
                    "nativeSrc": "80:73:11",
                    "nodeType": "YulFunctionCall",
                    "src": "80:73:11"
                  },
                  "nativeSrc": "77:93:11",
                  "nodeType": "YulIf",
                  "src": "77:93:11"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nativeSrc": "14:162:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nativeSrc": "56:5:11",
                "nodeType": "YulTypedName",
                "src": "56:5:11",
                "type": ""
              }
            ],
            "src": "14:162:11"
          },
          {
            "body": {
              "nativeSrc": "249:85:11",
              "nodeType": "YulBlock",
              "src": "249:85:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "288:16:11",
                    "nodeType": "YulBlock",
                    "src": "288:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "297:1:11",
                              "nodeType": "YulLiteral",
                              "src": "297:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "300:1:11",
                              "nodeType": "YulLiteral",
                              "src": "300:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "290:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "290:6:11"
                          },
                          "nativeSrc": "290:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "290:12:11"
                        },
                        "nativeSrc": "290:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "290:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "end",
                            "nativeSrc": "270:3:11",
                            "nodeType": "YulIdentifier",
                            "src": "270:3:11"
                          },
                          {
                            "name": "offset",
                            "nativeSrc": "275:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "275:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "266:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "266:3:11"
                        },
                        "nativeSrc": "266:16:11",
                        "nodeType": "YulFunctionCall",
                        "src": "266:16:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "284:2:11",
                        "nodeType": "YulLiteral",
                        "src": "284:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "262:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "262:3:11"
                    },
                    "nativeSrc": "262:25:11",
                    "nodeType": "YulFunctionCall",
                    "src": "262:25:11"
                  },
                  "nativeSrc": "259:45:11",
                  "nodeType": "YulIf",
                  "src": "259:45:11"
                },
                {
                  "nativeSrc": "313:15:11",
                  "nodeType": "YulAssignment",
                  "src": "313:15:11",
                  "value": {
                    "name": "offset",
                    "nativeSrc": "322:6:11",
                    "nodeType": "YulIdentifier",
                    "src": "322:6:11"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nativeSrc": "313:5:11",
                      "nodeType": "YulIdentifier",
                      "src": "313:5:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_struct_Batch_calldata",
            "nativeSrc": "181:153:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nativeSrc": "223:6:11",
                "nodeType": "YulTypedName",
                "src": "223:6:11",
                "type": ""
              },
              {
                "name": "end",
                "nativeSrc": "231:3:11",
                "nodeType": "YulTypedName",
                "src": "231:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nativeSrc": "239:5:11",
                "nodeType": "YulTypedName",
                "src": "239:5:11",
                "type": ""
              }
            ],
            "src": "181:153:11"
          },
          {
            "body": {
              "nativeSrc": "465:383:11",
              "nodeType": "YulBlock",
              "src": "465:383:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "511:16:11",
                    "nodeType": "YulBlock",
                    "src": "511:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "520:1:11",
                              "nodeType": "YulLiteral",
                              "src": "520:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "523:1:11",
                              "nodeType": "YulLiteral",
                              "src": "523:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "513:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "513:6:11"
                          },
                          "nativeSrc": "513:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "513:12:11"
                        },
                        "nativeSrc": "513:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "513:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "486:7:11",
                            "nodeType": "YulIdentifier",
                            "src": "486:7:11"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "495:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "495:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "482:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "482:3:11"
                        },
                        "nativeSrc": "482:23:11",
                        "nodeType": "YulFunctionCall",
                        "src": "482:23:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "507:2:11",
                        "nodeType": "YulLiteral",
                        "src": "507:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "478:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "478:3:11"
                    },
                    "nativeSrc": "478:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "478:32:11"
                  },
                  "nativeSrc": "475:52:11",
                  "nodeType": "YulIf",
                  "src": "475:52:11"
                },
                {
                  "nativeSrc": "536:36:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "536:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "562:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "562:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "549:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "549:12:11"
                    },
                    "nativeSrc": "549:23:11",
                    "nodeType": "YulFunctionCall",
                    "src": "549:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "540:5:11",
                      "nodeType": "YulTypedName",
                      "src": "540:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nativeSrc": "614:5:11",
                        "nodeType": "YulIdentifier",
                        "src": "614:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nativeSrc": "581:32:11",
                      "nodeType": "YulIdentifier",
                      "src": "581:32:11"
                    },
                    "nativeSrc": "581:39:11",
                    "nodeType": "YulFunctionCall",
                    "src": "581:39:11"
                  },
                  "nativeSrc": "581:39:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "581:39:11"
                },
                {
                  "nativeSrc": "629:15:11",
                  "nodeType": "YulAssignment",
                  "src": "629:15:11",
                  "value": {
                    "name": "value",
                    "nativeSrc": "639:5:11",
                    "nodeType": "YulIdentifier",
                    "src": "639:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "629:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "629:6:11"
                    }
                  ]
                },
                {
                  "nativeSrc": "653:46:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "653:46:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "684:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "684:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "695:2:11",
                            "nodeType": "YulLiteral",
                            "src": "695:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "680:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "680:3:11"
                        },
                        "nativeSrc": "680:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "680:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "667:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "667:12:11"
                    },
                    "nativeSrc": "667:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "667:32:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nativeSrc": "657:6:11",
                      "nodeType": "YulTypedName",
                      "src": "657:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "742:16:11",
                    "nodeType": "YulBlock",
                    "src": "742:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "751:1:11",
                              "nodeType": "YulLiteral",
                              "src": "751:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "754:1:11",
                              "nodeType": "YulLiteral",
                              "src": "754:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "744:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "744:6:11"
                          },
                          "nativeSrc": "744:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "744:12:11"
                        },
                        "nativeSrc": "744:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "744:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nativeSrc": "714:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "714:6:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "722:18:11",
                        "nodeType": "YulLiteral",
                        "src": "722:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nativeSrc": "711:2:11",
                      "nodeType": "YulIdentifier",
                      "src": "711:2:11"
                    },
                    "nativeSrc": "711:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "711:30:11"
                  },
                  "nativeSrc": "708:50:11",
                  "nodeType": "YulIf",
                  "src": "708:50:11"
                },
                {
                  "nativeSrc": "767:75:11",
                  "nodeType": "YulAssignment",
                  "src": "767:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "814:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "814:9:11"
                          },
                          {
                            "name": "offset",
                            "nativeSrc": "825:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "825:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "810:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "810:3:11"
                        },
                        "nativeSrc": "810:22:11",
                        "nodeType": "YulFunctionCall",
                        "src": "810:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "834:7:11",
                        "nodeType": "YulIdentifier",
                        "src": "834:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Batch_calldata",
                      "nativeSrc": "777:32:11",
                      "nodeType": "YulIdentifier",
                      "src": "777:32:11"
                    },
                    "nativeSrc": "777:65:11",
                    "nodeType": "YulFunctionCall",
                    "src": "777:65:11"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nativeSrc": "767:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "767:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$729t_struct$_Batch_$1392_calldata_ptr",
            "nativeSrc": "339:509:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "423:9:11",
                "nodeType": "YulTypedName",
                "src": "423:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "434:7:11",
                "nodeType": "YulTypedName",
                "src": "434:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "446:6:11",
                "nodeType": "YulTypedName",
                "src": "446:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "454:6:11",
                "nodeType": "YulTypedName",
                "src": "454:6:11",
                "type": ""
              }
            ],
            "src": "339:509:11"
          },
          {
            "body": {
              "nativeSrc": "948:257:11",
              "nodeType": "YulBlock",
              "src": "948:257:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "994:16:11",
                    "nodeType": "YulBlock",
                    "src": "994:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1003:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1003:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1006:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1006:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "996:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "996:6:11"
                          },
                          "nativeSrc": "996:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "996:12:11"
                        },
                        "nativeSrc": "996:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "996:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "969:7:11",
                            "nodeType": "YulIdentifier",
                            "src": "969:7:11"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "978:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "978:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "965:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "965:3:11"
                        },
                        "nativeSrc": "965:23:11",
                        "nodeType": "YulFunctionCall",
                        "src": "965:23:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "990:2:11",
                        "nodeType": "YulLiteral",
                        "src": "990:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "961:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "961:3:11"
                    },
                    "nativeSrc": "961:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "961:32:11"
                  },
                  "nativeSrc": "958:52:11",
                  "nodeType": "YulIf",
                  "src": "958:52:11"
                },
                {
                  "nativeSrc": "1019:37:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "1019:37:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "1046:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "1046:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "1033:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "1033:12:11"
                    },
                    "nativeSrc": "1033:23:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1033:23:11"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nativeSrc": "1023:6:11",
                      "nodeType": "YulTypedName",
                      "src": "1023:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "1099:16:11",
                    "nodeType": "YulBlock",
                    "src": "1099:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1108:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1108:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1111:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1111:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1101:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "1101:6:11"
                          },
                          "nativeSrc": "1101:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "1101:12:11"
                        },
                        "nativeSrc": "1101:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "1101:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nativeSrc": "1071:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "1071:6:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1079:18:11",
                        "nodeType": "YulLiteral",
                        "src": "1079:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nativeSrc": "1068:2:11",
                      "nodeType": "YulIdentifier",
                      "src": "1068:2:11"
                    },
                    "nativeSrc": "1068:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1068:30:11"
                  },
                  "nativeSrc": "1065:50:11",
                  "nodeType": "YulIf",
                  "src": "1065:50:11"
                },
                {
                  "nativeSrc": "1124:75:11",
                  "nodeType": "YulAssignment",
                  "src": "1124:75:11",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "1171:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "1171:9:11"
                          },
                          {
                            "name": "offset",
                            "nativeSrc": "1182:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "1182:6:11"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "1167:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "1167:3:11"
                        },
                        "nativeSrc": "1167:22:11",
                        "nodeType": "YulFunctionCall",
                        "src": "1167:22:11"
                      },
                      {
                        "name": "dataEnd",
                        "nativeSrc": "1191:7:11",
                        "nodeType": "YulIdentifier",
                        "src": "1191:7:11"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_struct_Batch_calldata",
                      "nativeSrc": "1134:32:11",
                      "nodeType": "YulIdentifier",
                      "src": "1134:32:11"
                    },
                    "nativeSrc": "1134:65:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1134:65:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "1124:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "1124:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_struct$_Batch_$1392_calldata_ptr",
            "nativeSrc": "853:352:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "914:9:11",
                "nodeType": "YulTypedName",
                "src": "914:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "925:7:11",
                "nodeType": "YulTypedName",
                "src": "925:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "937:6:11",
                "nodeType": "YulTypedName",
                "src": "937:6:11",
                "type": ""
              }
            ],
            "src": "853:352:11"
          },
          {
            "body": {
              "nativeSrc": "1351:494:11",
              "nodeType": "YulBlock",
              "src": "1351:494:11",
              "statements": [
                {
                  "nativeSrc": "1361:51:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "1361:51:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr_to_tail",
                        "nativeSrc": "1400:11:11",
                        "nodeType": "YulIdentifier",
                        "src": "1400:11:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "1387:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "1387:12:11"
                    },
                    "nativeSrc": "1387:25:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1387:25:11"
                  },
                  "variables": [
                    {
                      "name": "rel_offset_of_tail",
                      "nativeSrc": "1365:18:11",
                      "nodeType": "YulTypedName",
                      "src": "1365:18:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "1560:16:11",
                    "nodeType": "YulBlock",
                    "src": "1560:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1569:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1569:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1572:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1572:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1562:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "1562:6:11"
                          },
                          "nativeSrc": "1562:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "1562:12:11"
                        },
                        "nativeSrc": "1562:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "1562:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "rel_offset_of_tail",
                            "nativeSrc": "1435:18:11",
                            "nodeType": "YulIdentifier",
                            "src": "1435:18:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "calldatasize",
                                      "nativeSrc": "1463:12:11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1463:12:11"
                                    },
                                    "nativeSrc": "1463:14:11",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1463:14:11"
                                  },
                                  {
                                    "name": "base_ref",
                                    "nativeSrc": "1479:8:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "1479:8:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nativeSrc": "1459:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1459:3:11"
                                },
                                "nativeSrc": "1459:29:11",
                                "nodeType": "YulFunctionCall",
                                "src": "1459:29:11"
                              },
                              {
                                "kind": "number",
                                "nativeSrc": "1490:66:11",
                                "nodeType": "YulLiteral",
                                "src": "1490:66:11",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nativeSrc": "1455:3:11",
                              "nodeType": "YulIdentifier",
                              "src": "1455:3:11"
                            },
                            "nativeSrc": "1455:102:11",
                            "nodeType": "YulFunctionCall",
                            "src": "1455:102:11"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nativeSrc": "1431:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "1431:3:11"
                        },
                        "nativeSrc": "1431:127:11",
                        "nodeType": "YulFunctionCall",
                        "src": "1431:127:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "1424:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "1424:6:11"
                    },
                    "nativeSrc": "1424:135:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1424:135:11"
                  },
                  "nativeSrc": "1421:155:11",
                  "nodeType": "YulIf",
                  "src": "1421:155:11"
                },
                {
                  "nativeSrc": "1585:47:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "1585:47:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "base_ref",
                        "nativeSrc": "1603:8:11",
                        "nodeType": "YulIdentifier",
                        "src": "1603:8:11"
                      },
                      {
                        "name": "rel_offset_of_tail",
                        "nativeSrc": "1613:18:11",
                        "nodeType": "YulIdentifier",
                        "src": "1613:18:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1599:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "1599:3:11"
                    },
                    "nativeSrc": "1599:33:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1599:33:11"
                  },
                  "variables": [
                    {
                      "name": "addr_1",
                      "nativeSrc": "1589:6:11",
                      "nodeType": "YulTypedName",
                      "src": "1589:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nativeSrc": "1641:30:11",
                  "nodeType": "YulAssignment",
                  "src": "1641:30:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nativeSrc": "1664:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "1664:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "1651:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "1651:12:11"
                    },
                    "nativeSrc": "1651:20:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1651:20:11"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nativeSrc": "1641:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "1641:6:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "1714:16:11",
                    "nodeType": "YulBlock",
                    "src": "1714:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1723:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1723:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1726:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1726:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1716:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "1716:6:11"
                          },
                          "nativeSrc": "1716:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "1716:12:11"
                        },
                        "nativeSrc": "1716:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "1716:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nativeSrc": "1686:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "1686:6:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1694:18:11",
                        "nodeType": "YulLiteral",
                        "src": "1694:18:11",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nativeSrc": "1683:2:11",
                      "nodeType": "YulIdentifier",
                      "src": "1683:2:11"
                    },
                    "nativeSrc": "1683:30:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1683:30:11"
                  },
                  "nativeSrc": "1680:50:11",
                  "nodeType": "YulIf",
                  "src": "1680:50:11"
                },
                {
                  "nativeSrc": "1739:25:11",
                  "nodeType": "YulAssignment",
                  "src": "1739:25:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "addr_1",
                        "nativeSrc": "1751:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "1751:6:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1759:4:11",
                        "nodeType": "YulLiteral",
                        "src": "1759:4:11",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "1747:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "1747:3:11"
                    },
                    "nativeSrc": "1747:17:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1747:17:11"
                  },
                  "variableNames": [
                    {
                      "name": "addr",
                      "nativeSrc": "1739:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "1739:4:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "1823:16:11",
                    "nodeType": "YulBlock",
                    "src": "1823:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1832:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1832:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1835:1:11",
                              "nodeType": "YulLiteral",
                              "src": "1835:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "1825:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "1825:6:11"
                          },
                          "nativeSrc": "1825:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "1825:12:11"
                        },
                        "nativeSrc": "1825:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "1825:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "addr",
                        "nativeSrc": "1780:4:11",
                        "nodeType": "YulIdentifier",
                        "src": "1780:4:11"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "functionName": {
                              "name": "calldatasize",
                              "nativeSrc": "1790:12:11",
                              "nodeType": "YulIdentifier",
                              "src": "1790:12:11"
                            },
                            "nativeSrc": "1790:14:11",
                            "nodeType": "YulFunctionCall",
                            "src": "1790:14:11"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nativeSrc": "1810:1:11",
                                "nodeType": "YulLiteral",
                                "src": "1810:1:11",
                                "type": "",
                                "value": "6"
                              },
                              {
                                "name": "length",
                                "nativeSrc": "1813:6:11",
                                "nodeType": "YulIdentifier",
                                "src": "1813:6:11"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nativeSrc": "1806:3:11",
                              "nodeType": "YulIdentifier",
                              "src": "1806:3:11"
                            },
                            "nativeSrc": "1806:14:11",
                            "nodeType": "YulFunctionCall",
                            "src": "1806:14:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "1786:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "1786:3:11"
                        },
                        "nativeSrc": "1786:35:11",
                        "nodeType": "YulFunctionCall",
                        "src": "1786:35:11"
                      }
                    ],
                    "functionName": {
                      "name": "sgt",
                      "nativeSrc": "1776:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "1776:3:11"
                    },
                    "nativeSrc": "1776:46:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1776:46:11"
                  },
                  "nativeSrc": "1773:66:11",
                  "nodeType": "YulIf",
                  "src": "1773:66:11"
                }
              ]
            },
            "name": "access_calldata_tail_t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
            "nativeSrc": "1210:635:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base_ref",
                "nativeSrc": "1308:8:11",
                "nodeType": "YulTypedName",
                "src": "1308:8:11",
                "type": ""
              },
              {
                "name": "ptr_to_tail",
                "nativeSrc": "1318:11:11",
                "nodeType": "YulTypedName",
                "src": "1318:11:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "addr",
                "nativeSrc": "1334:4:11",
                "nodeType": "YulTypedName",
                "src": "1334:4:11",
                "type": ""
              },
              {
                "name": "length",
                "nativeSrc": "1340:6:11",
                "nodeType": "YulTypedName",
                "src": "1340:6:11",
                "type": ""
              }
            ],
            "src": "1210:635:11"
          },
          {
            "body": {
              "nativeSrc": "1882:152:11",
              "nodeType": "YulBlock",
              "src": "1882:152:11",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nativeSrc": "1899:1:11",
                        "nodeType": "YulLiteral",
                        "src": "1899:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1902:77:11",
                        "nodeType": "YulLiteral",
                        "src": "1902:77:11",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1892:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "1892:6:11"
                    },
                    "nativeSrc": "1892:88:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1892:88:11"
                  },
                  "nativeSrc": "1892:88:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "1892:88:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nativeSrc": "1996:1:11",
                        "nodeType": "YulLiteral",
                        "src": "1996:1:11",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "1999:4:11",
                        "nodeType": "YulLiteral",
                        "src": "1999:4:11",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "1989:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "1989:6:11"
                    },
                    "nativeSrc": "1989:15:11",
                    "nodeType": "YulFunctionCall",
                    "src": "1989:15:11"
                  },
                  "nativeSrc": "1989:15:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "1989:15:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nativeSrc": "2020:1:11",
                        "nodeType": "YulLiteral",
                        "src": "2020:1:11",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2023:4:11",
                        "nodeType": "YulLiteral",
                        "src": "2023:4:11",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nativeSrc": "2013:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "2013:6:11"
                    },
                    "nativeSrc": "2013:15:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2013:15:11"
                  },
                  "nativeSrc": "2013:15:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "2013:15:11"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nativeSrc": "1850:184:11",
            "nodeType": "YulFunctionDefinition",
            "src": "1850:184:11"
          },
          {
            "body": {
              "nativeSrc": "2087:231:11",
              "nodeType": "YulBlock",
              "src": "2087:231:11",
              "statements": [
                {
                  "nativeSrc": "2097:16:11",
                  "nodeType": "YulAssignment",
                  "src": "2097:16:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nativeSrc": "2108:1:11",
                        "nodeType": "YulIdentifier",
                        "src": "2108:1:11"
                      },
                      {
                        "name": "y",
                        "nativeSrc": "2111:1:11",
                        "nodeType": "YulIdentifier",
                        "src": "2111:1:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "2104:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "2104:3:11"
                    },
                    "nativeSrc": "2104:9:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2104:9:11"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nativeSrc": "2097:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "2097:3:11"
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "2144:168:11",
                    "nodeType": "YulBlock",
                    "src": "2144:168:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2165:1:11",
                              "nodeType": "YulLiteral",
                              "src": "2165:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2168:77:11",
                              "nodeType": "YulLiteral",
                              "src": "2168:77:11",
                              "type": "",
                              "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2158:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:11"
                          },
                          "nativeSrc": "2158:88:11",
                          "nodeType": "YulFunctionCall",
                          "src": "2158:88:11"
                        },
                        "nativeSrc": "2158:88:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "2158:88:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2266:1:11",
                              "nodeType": "YulLiteral",
                              "src": "2266:1:11",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2269:4:11",
                              "nodeType": "YulLiteral",
                              "src": "2269:4:11",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "2259:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "2259:6:11"
                          },
                          "nativeSrc": "2259:15:11",
                          "nodeType": "YulFunctionCall",
                          "src": "2259:15:11"
                        },
                        "nativeSrc": "2259:15:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "2259:15:11"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2294:1:11",
                              "nodeType": "YulLiteral",
                              "src": "2294:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2297:4:11",
                              "nodeType": "YulLiteral",
                              "src": "2297:4:11",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2287:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "2287:6:11"
                          },
                          "nativeSrc": "2287:15:11",
                          "nodeType": "YulFunctionCall",
                          "src": "2287:15:11"
                        },
                        "nativeSrc": "2287:15:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "2287:15:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nativeSrc": "2128:1:11",
                        "nodeType": "YulIdentifier",
                        "src": "2128:1:11"
                      },
                      {
                        "name": "sum",
                        "nativeSrc": "2131:3:11",
                        "nodeType": "YulIdentifier",
                        "src": "2131:3:11"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nativeSrc": "2125:2:11",
                      "nodeType": "YulIdentifier",
                      "src": "2125:2:11"
                    },
                    "nativeSrc": "2125:10:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2125:10:11"
                  },
                  "nativeSrc": "2122:190:11",
                  "nodeType": "YulIf",
                  "src": "2122:190:11"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nativeSrc": "2039:279:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nativeSrc": "2070:1:11",
                "nodeType": "YulTypedName",
                "src": "2070:1:11",
                "type": ""
              },
              {
                "name": "y",
                "nativeSrc": "2073:1:11",
                "nodeType": "YulTypedName",
                "src": "2073:1:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nativeSrc": "2079:3:11",
                "nodeType": "YulTypedName",
                "src": "2079:3:11",
                "type": ""
              }
            ],
            "src": "2039:279:11"
          },
          {
            "body": {
              "nativeSrc": "2401:185:11",
              "nodeType": "YulBlock",
              "src": "2401:185:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "2447:16:11",
                    "nodeType": "YulBlock",
                    "src": "2447:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "2456:1:11",
                              "nodeType": "YulLiteral",
                              "src": "2456:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "2459:1:11",
                              "nodeType": "YulLiteral",
                              "src": "2459:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "2449:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "2449:6:11"
                          },
                          "nativeSrc": "2449:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "2449:12:11"
                        },
                        "nativeSrc": "2449:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "2449:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "2422:7:11",
                            "nodeType": "YulIdentifier",
                            "src": "2422:7:11"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "2431:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "2431:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "2418:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "2418:3:11"
                        },
                        "nativeSrc": "2418:23:11",
                        "nodeType": "YulFunctionCall",
                        "src": "2418:23:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2443:2:11",
                        "nodeType": "YulLiteral",
                        "src": "2443:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "2414:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "2414:3:11"
                    },
                    "nativeSrc": "2414:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2414:32:11"
                  },
                  "nativeSrc": "2411:52:11",
                  "nodeType": "YulIf",
                  "src": "2411:52:11"
                },
                {
                  "nativeSrc": "2472:36:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "2472:36:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2498:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "2498:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nativeSrc": "2485:12:11",
                      "nodeType": "YulIdentifier",
                      "src": "2485:12:11"
                    },
                    "nativeSrc": "2485:23:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2485:23:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "2476:5:11",
                      "nodeType": "YulTypedName",
                      "src": "2476:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nativeSrc": "2550:5:11",
                        "nodeType": "YulIdentifier",
                        "src": "2550:5:11"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nativeSrc": "2517:32:11",
                      "nodeType": "YulIdentifier",
                      "src": "2517:32:11"
                    },
                    "nativeSrc": "2517:39:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2517:39:11"
                  },
                  "nativeSrc": "2517:39:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "2517:39:11"
                },
                {
                  "nativeSrc": "2565:15:11",
                  "nodeType": "YulAssignment",
                  "src": "2565:15:11",
                  "value": {
                    "name": "value",
                    "nativeSrc": "2575:5:11",
                    "nodeType": "YulIdentifier",
                    "src": "2575:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "2565:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "2565:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nativeSrc": "2323:263:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "2367:9:11",
                "nodeType": "YulTypedName",
                "src": "2367:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "2378:7:11",
                "nodeType": "YulTypedName",
                "src": "2378:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "2390:6:11",
                "nodeType": "YulTypedName",
                "src": "2390:6:11",
                "type": ""
              }
            ],
            "src": "2323:263:11"
          },
          {
            "body": {
              "nativeSrc": "2782:14:11",
              "nodeType": "YulBlock",
              "src": "2782:14:11",
              "statements": [
                {
                  "nativeSrc": "2784:10:11",
                  "nodeType": "YulAssignment",
                  "src": "2784:10:11",
                  "value": {
                    "name": "pos",
                    "nativeSrc": "2791:3:11",
                    "nodeType": "YulIdentifier",
                    "src": "2791:3:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nativeSrc": "2784:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "2784:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nativeSrc": "2591:205:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nativeSrc": "2766:3:11",
                "nodeType": "YulTypedName",
                "src": "2766:3:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nativeSrc": "2774:3:11",
                "nodeType": "YulTypedName",
                "src": "2774:3:11",
                "type": ""
              }
            ],
            "src": "2591:205:11"
          },
          {
            "body": {
              "nativeSrc": "2902:125:11",
              "nodeType": "YulBlock",
              "src": "2902:125:11",
              "statements": [
                {
                  "nativeSrc": "2912:26:11",
                  "nodeType": "YulAssignment",
                  "src": "2912:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2924:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "2924:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "2935:2:11",
                        "nodeType": "YulLiteral",
                        "src": "2935:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "2920:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "2920:3:11"
                    },
                    "nativeSrc": "2920:18:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2920:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "2912:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "2912:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "2954:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "2954:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "2969:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "2969:6:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "2977:42:11",
                            "nodeType": "YulLiteral",
                            "src": "2977:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "2965:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "2965:3:11"
                        },
                        "nativeSrc": "2965:55:11",
                        "nodeType": "YulFunctionCall",
                        "src": "2965:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "2947:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "2947:6:11"
                    },
                    "nativeSrc": "2947:74:11",
                    "nodeType": "YulFunctionCall",
                    "src": "2947:74:11"
                  },
                  "nativeSrc": "2947:74:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "2947:74:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nativeSrc": "2801:226:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "2871:9:11",
                "nodeType": "YulTypedName",
                "src": "2871:9:11",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "2882:6:11",
                "nodeType": "YulTypedName",
                "src": "2882:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "2893:4:11",
                "nodeType": "YulTypedName",
                "src": "2893:4:11",
                "type": ""
              }
            ],
            "src": "2801:226:11"
          },
          {
            "body": {
              "nativeSrc": "3189:260:11",
              "nodeType": "YulBlock",
              "src": "3189:260:11",
              "statements": [
                {
                  "nativeSrc": "3199:26:11",
                  "nodeType": "YulAssignment",
                  "src": "3199:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3211:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "3211:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3222:2:11",
                        "nodeType": "YulLiteral",
                        "src": "3222:2:11",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "3207:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "3207:3:11"
                    },
                    "nativeSrc": "3207:18:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3207:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "3199:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "3199:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3241:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "3241:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "3256:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "3256:6:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3264:42:11",
                            "nodeType": "YulLiteral",
                            "src": "3264:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "3252:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3252:3:11"
                        },
                        "nativeSrc": "3252:55:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3252:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3234:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3234:6:11"
                    },
                    "nativeSrc": "3234:74:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3234:74:11"
                  },
                  "nativeSrc": "3234:74:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "3234:74:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3328:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "3328:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3339:2:11",
                            "nodeType": "YulLiteral",
                            "src": "3339:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3324:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3324:3:11"
                        },
                        "nativeSrc": "3324:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3324:18:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nativeSrc": "3348:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "3348:6:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3356:42:11",
                            "nodeType": "YulLiteral",
                            "src": "3356:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "3344:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3344:3:11"
                        },
                        "nativeSrc": "3344:55:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3344:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3317:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3317:6:11"
                    },
                    "nativeSrc": "3317:83:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3317:83:11"
                  },
                  "nativeSrc": "3317:83:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "3317:83:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3420:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "3420:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3431:2:11",
                            "nodeType": "YulLiteral",
                            "src": "3431:2:11",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3416:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3416:3:11"
                        },
                        "nativeSrc": "3416:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3416:18:11"
                      },
                      {
                        "name": "value2",
                        "nativeSrc": "3436:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "3436:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3409:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3409:6:11"
                    },
                    "nativeSrc": "3409:34:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3409:34:11"
                  },
                  "nativeSrc": "3409:34:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "3409:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nativeSrc": "3032:417:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3142:9:11",
                "nodeType": "YulTypedName",
                "src": "3142:9:11",
                "type": ""
              },
              {
                "name": "value2",
                "nativeSrc": "3153:6:11",
                "nodeType": "YulTypedName",
                "src": "3153:6:11",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "3161:6:11",
                "nodeType": "YulTypedName",
                "src": "3161:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "3169:6:11",
                "nodeType": "YulTypedName",
                "src": "3169:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "3180:4:11",
                "nodeType": "YulTypedName",
                "src": "3180:4:11",
                "type": ""
              }
            ],
            "src": "3032:417:11"
          },
          {
            "body": {
              "nativeSrc": "3583:168:11",
              "nodeType": "YulBlock",
              "src": "3583:168:11",
              "statements": [
                {
                  "nativeSrc": "3593:26:11",
                  "nodeType": "YulAssignment",
                  "src": "3593:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3605:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "3605:9:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3616:2:11",
                        "nodeType": "YulLiteral",
                        "src": "3616:2:11",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "3601:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "3601:3:11"
                    },
                    "nativeSrc": "3601:18:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3601:18:11"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nativeSrc": "3593:4:11",
                      "nodeType": "YulIdentifier",
                      "src": "3593:4:11"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3635:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "3635:9:11"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nativeSrc": "3650:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "3650:6:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3658:42:11",
                            "nodeType": "YulLiteral",
                            "src": "3658:42:11",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nativeSrc": "3646:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3646:3:11"
                        },
                        "nativeSrc": "3646:55:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3646:55:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3628:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3628:6:11"
                    },
                    "nativeSrc": "3628:74:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3628:74:11"
                  },
                  "nativeSrc": "3628:74:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "3628:74:11"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nativeSrc": "3722:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "3722:9:11"
                          },
                          {
                            "kind": "number",
                            "nativeSrc": "3733:2:11",
                            "nodeType": "YulLiteral",
                            "src": "3733:2:11",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nativeSrc": "3718:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3718:3:11"
                        },
                        "nativeSrc": "3718:18:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3718:18:11"
                      },
                      {
                        "name": "value1",
                        "nativeSrc": "3738:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "3738:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "3711:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3711:6:11"
                    },
                    "nativeSrc": "3711:34:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3711:34:11"
                  },
                  "nativeSrc": "3711:34:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "3711:34:11"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nativeSrc": "3454:297:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3544:9:11",
                "nodeType": "YulTypedName",
                "src": "3544:9:11",
                "type": ""
              },
              {
                "name": "value1",
                "nativeSrc": "3555:6:11",
                "nodeType": "YulTypedName",
                "src": "3555:6:11",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "3563:6:11",
                "nodeType": "YulTypedName",
                "src": "3563:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nativeSrc": "3574:4:11",
                "nodeType": "YulTypedName",
                "src": "3574:4:11",
                "type": ""
              }
            ],
            "src": "3454:297:11"
          },
          {
            "body": {
              "nativeSrc": "3834:199:11",
              "nodeType": "YulBlock",
              "src": "3834:199:11",
              "statements": [
                {
                  "body": {
                    "nativeSrc": "3880:16:11",
                    "nodeType": "YulBlock",
                    "src": "3880:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "3889:1:11",
                              "nodeType": "YulLiteral",
                              "src": "3889:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "3892:1:11",
                              "nodeType": "YulLiteral",
                              "src": "3892:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "3882:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "3882:6:11"
                          },
                          "nativeSrc": "3882:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "3882:12:11"
                        },
                        "nativeSrc": "3882:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "3882:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nativeSrc": "3855:7:11",
                            "nodeType": "YulIdentifier",
                            "src": "3855:7:11"
                          },
                          {
                            "name": "headStart",
                            "nativeSrc": "3864:9:11",
                            "nodeType": "YulIdentifier",
                            "src": "3864:9:11"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nativeSrc": "3851:3:11",
                          "nodeType": "YulIdentifier",
                          "src": "3851:3:11"
                        },
                        "nativeSrc": "3851:23:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3851:23:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "3876:2:11",
                        "nodeType": "YulLiteral",
                        "src": "3876:2:11",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nativeSrc": "3847:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "3847:3:11"
                    },
                    "nativeSrc": "3847:32:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3847:32:11"
                  },
                  "nativeSrc": "3844:52:11",
                  "nodeType": "YulIf",
                  "src": "3844:52:11"
                },
                {
                  "nativeSrc": "3905:29:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "3905:29:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nativeSrc": "3924:9:11",
                        "nodeType": "YulIdentifier",
                        "src": "3924:9:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nativeSrc": "3918:5:11",
                      "nodeType": "YulIdentifier",
                      "src": "3918:5:11"
                    },
                    "nativeSrc": "3918:16:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3918:16:11"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nativeSrc": "3909:5:11",
                      "nodeType": "YulTypedName",
                      "src": "3909:5:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "3987:16:11",
                    "nodeType": "YulBlock",
                    "src": "3987:16:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "3996:1:11",
                              "nodeType": "YulLiteral",
                              "src": "3996:1:11",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "3999:1:11",
                              "nodeType": "YulLiteral",
                              "src": "3999:1:11",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nativeSrc": "3989:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "3989:6:11"
                          },
                          "nativeSrc": "3989:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "3989:12:11"
                        },
                        "nativeSrc": "3989:12:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "3989:12:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nativeSrc": "3956:5:11",
                            "nodeType": "YulIdentifier",
                            "src": "3956:5:11"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nativeSrc": "3977:5:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "3977:5:11"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nativeSrc": "3970:6:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "3970:6:11"
                                },
                                "nativeSrc": "3970:13:11",
                                "nodeType": "YulFunctionCall",
                                "src": "3970:13:11"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nativeSrc": "3963:6:11",
                              "nodeType": "YulIdentifier",
                              "src": "3963:6:11"
                            },
                            "nativeSrc": "3963:21:11",
                            "nodeType": "YulFunctionCall",
                            "src": "3963:21:11"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nativeSrc": "3953:2:11",
                          "nodeType": "YulIdentifier",
                          "src": "3953:2:11"
                        },
                        "nativeSrc": "3953:32:11",
                        "nodeType": "YulFunctionCall",
                        "src": "3953:32:11"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nativeSrc": "3946:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "3946:6:11"
                    },
                    "nativeSrc": "3946:40:11",
                    "nodeType": "YulFunctionCall",
                    "src": "3946:40:11"
                  },
                  "nativeSrc": "3943:60:11",
                  "nodeType": "YulIf",
                  "src": "3943:60:11"
                },
                {
                  "nativeSrc": "4012:15:11",
                  "nodeType": "YulAssignment",
                  "src": "4012:15:11",
                  "value": {
                    "name": "value",
                    "nativeSrc": "4022:5:11",
                    "nodeType": "YulIdentifier",
                    "src": "4022:5:11"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nativeSrc": "4012:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "4012:6:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nativeSrc": "3756:277:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nativeSrc": "3800:9:11",
                "nodeType": "YulTypedName",
                "src": "3800:9:11",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nativeSrc": "3811:7:11",
                "nodeType": "YulTypedName",
                "src": "3811:7:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nativeSrc": "3823:6:11",
                "nodeType": "YulTypedName",
                "src": "3823:6:11",
                "type": ""
              }
            ],
            "src": "3756:277:11"
          },
          {
            "body": {
              "nativeSrc": "4175:275:11",
              "nodeType": "YulBlock",
              "src": "4175:275:11",
              "statements": [
                {
                  "nativeSrc": "4185:27:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "4185:27:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nativeSrc": "4205:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "4205:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nativeSrc": "4199:5:11",
                      "nodeType": "YulIdentifier",
                      "src": "4199:5:11"
                    },
                    "nativeSrc": "4199:13:11",
                    "nodeType": "YulFunctionCall",
                    "src": "4199:13:11"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nativeSrc": "4189:6:11",
                      "nodeType": "YulTypedName",
                      "src": "4189:6:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "nativeSrc": "4221:10:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "4221:10:11",
                  "value": {
                    "kind": "number",
                    "nativeSrc": "4230:1:11",
                    "nodeType": "YulLiteral",
                    "src": "4230:1:11",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nativeSrc": "4225:1:11",
                      "nodeType": "YulTypedName",
                      "src": "4225:1:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nativeSrc": "4292:77:11",
                    "nodeType": "YulBlock",
                    "src": "4292:77:11",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nativeSrc": "4317:3:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4317:3:11"
                                },
                                {
                                  "name": "i",
                                  "nativeSrc": "4322:1:11",
                                  "nodeType": "YulIdentifier",
                                  "src": "4322:1:11"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nativeSrc": "4313:3:11",
                                "nodeType": "YulIdentifier",
                                "src": "4313:3:11"
                              },
                              "nativeSrc": "4313:11:11",
                              "nodeType": "YulFunctionCall",
                              "src": "4313:11:11"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nativeSrc": "4340:6:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4340:6:11"
                                        },
                                        {
                                          "name": "i",
                                          "nativeSrc": "4348:1:11",
                                          "nodeType": "YulIdentifier",
                                          "src": "4348:1:11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nativeSrc": "4336:3:11",
                                        "nodeType": "YulIdentifier",
                                        "src": "4336:3:11"
                                      },
                                      "nativeSrc": "4336:14:11",
                                      "nodeType": "YulFunctionCall",
                                      "src": "4336:14:11"
                                    },
                                    {
                                      "kind": "number",
                                      "nativeSrc": "4352:4:11",
                                      "nodeType": "YulLiteral",
                                      "src": "4352:4:11",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nativeSrc": "4332:3:11",
                                    "nodeType": "YulIdentifier",
                                    "src": "4332:3:11"
                                  },
                                  "nativeSrc": "4332:25:11",
                                  "nodeType": "YulFunctionCall",
                                  "src": "4332:25:11"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nativeSrc": "4326:5:11",
                                "nodeType": "YulIdentifier",
                                "src": "4326:5:11"
                              },
                              "nativeSrc": "4326:32:11",
                              "nodeType": "YulFunctionCall",
                              "src": "4326:32:11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nativeSrc": "4306:6:11",
                            "nodeType": "YulIdentifier",
                            "src": "4306:6:11"
                          },
                          "nativeSrc": "4306:53:11",
                          "nodeType": "YulFunctionCall",
                          "src": "4306:53:11"
                        },
                        "nativeSrc": "4306:53:11",
                        "nodeType": "YulExpressionStatement",
                        "src": "4306:53:11"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nativeSrc": "4251:1:11",
                        "nodeType": "YulIdentifier",
                        "src": "4251:1:11"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "4254:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "4254:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nativeSrc": "4248:2:11",
                      "nodeType": "YulIdentifier",
                      "src": "4248:2:11"
                    },
                    "nativeSrc": "4248:13:11",
                    "nodeType": "YulFunctionCall",
                    "src": "4248:13:11"
                  },
                  "nativeSrc": "4240:129:11",
                  "nodeType": "YulForLoop",
                  "post": {
                    "nativeSrc": "4262:21:11",
                    "nodeType": "YulBlock",
                    "src": "4262:21:11",
                    "statements": [
                      {
                        "nativeSrc": "4264:17:11",
                        "nodeType": "YulAssignment",
                        "src": "4264:17:11",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nativeSrc": "4273:1:11",
                              "nodeType": "YulIdentifier",
                              "src": "4273:1:11"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "4276:4:11",
                              "nodeType": "YulLiteral",
                              "src": "4276:4:11",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nativeSrc": "4269:3:11",
                            "nodeType": "YulIdentifier",
                            "src": "4269:3:11"
                          },
                          "nativeSrc": "4269:12:11",
                          "nodeType": "YulFunctionCall",
                          "src": "4269:12:11"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nativeSrc": "4264:1:11",
                            "nodeType": "YulIdentifier",
                            "src": "4264:1:11"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nativeSrc": "4244:3:11",
                    "nodeType": "YulBlock",
                    "src": "4244:3:11",
                    "statements": []
                  },
                  "src": "4240:129:11"
                },
                {
                  "nativeSrc": "4378:26:11",
                  "nodeType": "YulVariableDeclaration",
                  "src": "4378:26:11",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nativeSrc": "4392:3:11",
                        "nodeType": "YulIdentifier",
                        "src": "4392:3:11"
                      },
                      {
                        "name": "length",
                        "nativeSrc": "4397:6:11",
                        "nodeType": "YulIdentifier",
                        "src": "4397:6:11"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nativeSrc": "4388:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "4388:3:11"
                    },
                    "nativeSrc": "4388:16:11",
                    "nodeType": "YulFunctionCall",
                    "src": "4388:16:11"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nativeSrc": "4382:2:11",
                      "nodeType": "YulTypedName",
                      "src": "4382:2:11",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nativeSrc": "4420:2:11",
                        "nodeType": "YulIdentifier",
                        "src": "4420:2:11"
                      },
                      {
                        "kind": "number",
                        "nativeSrc": "4424:1:11",
                        "nodeType": "YulLiteral",
                        "src": "4424:1:11",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nativeSrc": "4413:6:11",
                      "nodeType": "YulIdentifier",
                      "src": "4413:6:11"
                    },
                    "nativeSrc": "4413:13:11",
                    "nodeType": "YulFunctionCall",
                    "src": "4413:13:11"
                  },
                  "nativeSrc": "4413:13:11",
                  "nodeType": "YulExpressionStatement",
                  "src": "4413:13:11"
                },
                {
                  "nativeSrc": "4435:9:11",
                  "nodeType": "YulAssignment",
                  "src": "4435:9:11",
                  "value": {
                    "name": "_1",
                    "nativeSrc": "4442:2:11",
                    "nodeType": "YulIdentifier",
                    "src": "4442:2:11"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nativeSrc": "4435:3:11",
                      "nodeType": "YulIdentifier",
                      "src": "4435:3:11"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nativeSrc": "4038:412:11",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nativeSrc": "4151:3:11",
                "nodeType": "YulTypedName",
                "src": "4151:3:11",
                "type": ""
              },
              {
                "name": "value0",
                "nativeSrc": "4156:6:11",
                "nodeType": "YulTypedName",
                "src": "4156:6:11",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nativeSrc": "4167:3:11",
                "nodeType": "YulTypedName",
                "src": "4167:3:11",
                "type": ""
              }
            ],
            "src": "4038:412:11"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_struct_Batch_calldata(offset, end) -> value\n    {\n        if slt(sub(end, offset), 32) { revert(0, 0) }\n        value := offset\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$729t_struct$_Batch_$1392_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_struct_Batch_calldata(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_Batch_$1392_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_struct_Batch_calldata(add(headStart, offset), dataEnd)\n    }\n    function access_calldata_tail_t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1))) { revert(0, 0) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), shl(6, length))) { revert(0, 0) }\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n    }\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
      "id": 11,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "709:4266:8:-:0;;;1420:4;1404:57;;;;-1:-1:-1;;;1404:57:8;;216:2:11;1404:57:8;;;198:21:11;255:2;235:18;;;228:30;-1:-1:-1;;;274:18:11;;;267:47;331:18;;1404:57:8;;;;;;;;709:4266;;;;;;",
  "deployedSourceMap": "709:4266:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;3896:1076;;;;;;;;;;-1:-1:-1;3896:1076:8;;;;;:::i;:::-;;:::i;:::-;;1870:1289;;;;;;:::i;:::-;;:::i;3896:1076::-;4151:14;4168:10;:5;;:10;:::i;:::-;:17;;4151:34;;4377:13;4406:9;4401:89;4421:6;4417:1;:10;4401:89;;;4458:10;:5;;:10;:::i;:::-;4469:1;4458:13;;;;;;;:::i;:::-;;;;;;:20;;;4449:29;;;;;:::i;:::-;;-1:-1:-1;4429:3:8;;4401:89;;;-1:-1:-1;4771:56:8;:22;;;4794:10;4814:4;4821:5;4771:22;:56::i;:::-;4845:9;4840:125;4860:6;4856:1;:10;4840:125;;;4888:65;4907:10;:5;;:10;:::i;:::-;4918:1;4907:13;;;;;;;:::i;:::-;:23;;;:13;;;;;:23;;;;-1:-1:-1;4907:23:8;:::i;:::-;4932:10;:5;;:10;:::i;:::-;4943:1;4932:13;;;;;;;:::i;:::-;;;;;;:20;;;4888:5;:18;;;;:65;;;;;:::i;:::-;4868:3;;4840:125;;;;3966:1006;;3896:1076;;:::o;1870:1289::-;2119:14;2136:10;:5;;:10;:::i;:::-;:17;;2119:34;;2350:9;2345:298;2365:6;2361:1;:10;2345:298;;;2458:9;2473:10;:5;;:10;:::i;:::-;2484:1;2473:13;;;;;;;:::i;:::-;:23;;;:13;;;;;:23;;;;-1:-1:-1;2473:23:8;:::i;:::-;:28;;2527:10;:5;;:10;:::i;:::-;2538:1;2527:13;;;;;;;:::i;:::-;;;;;;:20;;;2473:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2457:109;;;2586:4;2581:50;;2599:32;;;;;2625:4;2599:32;;;2947:74:11;2920:18;;2599:32:8;;;;;;;;2581:50;-1:-1:-1;2373:3:8;;2345:298;;;-1:-1:-1;2673:21:8;2709:12;;2705:447;;3027:44;;3008:13;;3035:10;;3059:7;;3008:13;3027:44;3008:13;3027:44;3059:7;3035:10;3027:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3007:64;;;3091:8;3086:54;;3108:32;;;;;3134:4;3108:32;;;2947:74:11;2920:18;;3108:32:8;2801:226:11;3086:54:8;2723:429;2705:447;1934:1225;;1870:1289;:::o;1702:188:5:-;1829:53;;1844:18;3252:55:11;;;1829:53:5;;;3234:74:11;3344:55;;;3324:18;;;3317:83;3416:18;;;3409:34;;;1802:81:5;;1822:5;;1844:18;;;;;3207::11;;1829:53:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;1303:160::-;1412:43;;1427:14;3646:55:11;;;1412:43:5;;;3628:74:11;3718:18;;;3711:34;;;1385:71:5;;1405:5;;1427:14;;;;;3601:18:11;;1412:43:5;3454:297:11;4059:629:5;4478:23;4504:33;:27;;;4532:4;4504:27;:33::i;:::-;4478:59;;4551:10;:17;4572:1;4551:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4631:40;;;;;2977:42:11;2965:55;;4631:40:5;;;2947:74:11;2920:18;;4631:40:5;2801:226:11;2705:151:6;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3359:41;;;;;3394:4;3359:41;;;2947:74:11;2920:18;;3359:41:6;2801:226:11;3303:108:6;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;5071:18:6;;;;:23;5045:49;5041:119;;;5121:24;;;;;2977:42:11;2965:55;;5121:24:6;;;2947:74:11;2920:18;;5121:24:6;2801:226:11;5041:119:6;-1:-1:-1;5180:10:6;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;5870:383;5743:516;:::o;14:162:11:-;108:42;101:5;97:54;90:5;87:65;77:93;;166:1;163;156:12;181:153;239:5;284:2;275:6;270:3;266:16;262:25;259:45;;;300:1;297;290:12;259:45;-1:-1:-1;322:6:11;181:153;-1:-1:-1;181:153:11:o;339:509::-;446:6;454;507:2;495:9;486:7;482:23;478:32;475:52;;;523:1;520;513:12;475:52;562:9;549:23;581:39;614:5;581:39;:::i;:::-;639:5;-1:-1:-1;695:2:11;680:18;;667:32;722:18;711:30;;708:50;;;754:1;751;744:12;708:50;777:65;834:7;825:6;814:9;810:22;777:65;:::i;:::-;767:75;;;339:509;;;;;:::o;853:352::-;937:6;990:2;978:9;969:7;965:23;961:32;958:52;;;1006:1;1003;996:12;958:52;1046:9;1033:23;1079:18;1071:6;1068:30;1065:50;;;1111:1;1108;1101:12;1065:50;1134:65;1191:7;1182:6;1171:9;1167:22;1134:65;:::i;:::-;1124:75;853:352;-1:-1:-1;;;;853:352:11:o;1210:635::-;1334:4;1340:6;1400:11;1387:25;1490:66;1479:8;1463:14;1459:29;1455:102;1435:18;1431:127;1421:155;;1572:1;1569;1562:12;1421:155;1599:33;;1651:20;;;-1:-1:-1;1694:18:11;1683:30;;1680:50;;;1726:1;1723;1716:12;1680:50;1759:4;1747:17;;-1:-1:-1;1810:1:11;1806:14;;;1790;1786:35;1776:46;;1773:66;;;1835:1;1832;1825:12;1773:66;1210:635;;;;;:::o;1850:184::-;1902:77;1899:1;1892:88;1999:4;1996:1;1989:15;2023:4;2020:1;2013:15;2039:279;2104:9;;;2125:10;;;2122:190;;;2168:77;2165:1;2158:88;2269:4;2266:1;2259:15;2297:4;2294:1;2287:15;2323:263;2390:6;2443:2;2431:9;2422:7;2418:23;2414:32;2411:52;;;2459:1;2456;2449:12;2411:52;2498:9;2485:23;2517:39;2550:5;2517:39;:::i;3756:277::-;3823:6;3876:2;3864:9;3855:7;3851:23;3847:32;3844:52;;;3892:1;3889;3882:12;3844:52;3924:9;3918:16;3977:5;3970:13;3963:21;3956:5;3953:32;3943:60;;3999:1;3996;3989:12;4038:412;4167:3;4205:6;4199:13;4230:1;4240:129;4254:6;4251:1;4248:13;4240:129;;;4352:4;4336:14;;;4332:25;;4326:32;4313:11;;;4306:53;4269:12;4240:129;;;-1:-1:-1;4424:1:11;4388:16;;4413:13;;;-1:-1:-1;4388:16:11;4038:412;-1:-1:-1;4038:412:11:o",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.26;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {SafeERC20} from \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\n/**\r\n * @dev Error that occurs when transferring ether has failed.\r\n * @param emitter The contract that emits the error.\r\n */\r\nerror EtherTransferFail(address emitter);\r\n\r\n/**\r\n * @title Native and ERC-20 Token Batch Distributor\r\n * @author 0x7761676d69\r\n * @notice Helper smart contract for batch sending both\r\n * native and ERC-20 tokens.\r\n * @dev Since we use nested struct objects, we rely on the ABI coder v2.\r\n * The ABI coder v2 is activated by default since Solidity `v0.8.0`.\r\n */\r\ncontract BatchDistributor {\r\n    using SafeERC20 for IERC20;\r\n\r\n    /**\r\n     * @dev Transaction struct for the transaction payload.\r\n     */\r\n    struct Transaction {\r\n        address payable recipient;\r\n        uint256 amount;\r\n    }\r\n\r\n    /**\r\n     * @dev Batch struct for the array of transactions.\r\n     */\r\n    struct Batch {\r\n        Transaction[] txns;\r\n    }\r\n\r\n    /**\r\n     * @dev You can cut out 10 opcodes in the creation-time EVM bytecode\r\n     * if you declare a constructor `payable`.\r\n     *\r\n     * For more in-depth information see here:\r\n     * https://forum.openzeppelin.com/t/a-collection-of-gas-optimisation-tricks/19966/5.\r\n     */\r\n    constructor() payable {\r\n        require(address(this) != address(0), \"Deployment failed\");\r\n    }\r\n\r\n    /**\r\n     * @dev Distributes ether, denominated in wei, to a predefined batch\r\n     * of recipient addresses.\r\n     * @notice In the event that excessive ether is sent, the residual\r\n     * amount is returned back to the `msg.sender`.\r\n     * @param batch Nested struct object that contains an array of tuples that\r\n     * contain each a recipient address & ether amount in wei.\r\n     */\r\n    function distributeEther(Batch calldata batch) external payable {\r\n        /**\r\n         * @dev Caching the length in for loops saves 3 additional gas\r\n         * for a `calldata` array for each iteration except for the first.\r\n         */\r\n        uint256 length = batch.txns.length;\r\n\r\n        /**\r\n         * @dev If a variable is not set/initialised, it is assumed to have\r\n         * the default value. The default value for the `uint` types is 0.\r\n         */\r\n        for (uint256 i; i < length; ++i) {\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool sent, ) = batch.txns[i].recipient.call{\r\n                value: batch.txns[i].amount\r\n            }(\"\");\r\n            if (!sent) revert EtherTransferFail(address(this));\r\n        }\r\n\r\n        uint256 balance = address(this).balance;\r\n        if (balance != 0) {\r\n            /**\r\n             * @dev Any wei amount previously forced into this contract (e.g. by\r\n             * using the `SELFDESTRUCT` opcode) will be part of the refund transaction.\r\n             */\r\n            // solhint-disable-next-line avoid-low-level-calls\r\n            (bool refunded, ) = payable(msg.sender).call{value: balance}(\"\");\r\n            if (!refunded) revert EtherTransferFail(address(this));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Distributes ERC-20 tokens, denominated in their corresponding\r\n     * lowest unit, to a predefined batch of recipient addresses.\r\n     * @notice To deal with (potentially) non-compliant ERC-20 tokens that\r\n     * do have no return value, we use the `SafeERC20` library for external calls.\r\n     * Note: Since we cast the token address into the official ERC-20 interface,\r\n     * the use of non-compliant ERC-20 tokens is prevented by design. Nevertheless,\r\n     * we keep this guardrail for security reasons.\r\n     * @param token ERC-20 token contract address.\r\n     * @param batch Nested struct object that contains an array of tuples that\r\n     * contain each a recipient address & token amount.\r\n     */\r\n    function distributeToken(IERC20 token, Batch calldata batch) external {\r\n        /**\r\n         * @dev Caching the length in for loops saves 3 additional gas\r\n         * for a `calldata` array for each iteration except for the first.\r\n         */\r\n        uint256 length = batch.txns.length;\r\n\r\n        /**\r\n         * @dev If a variable is not set/initialised, it is assumed to have\r\n         * the default value. The default value for the `uint` types is 0.\r\n         */\r\n        uint256 total;\r\n        for (uint256 i; i < length; ++i) {\r\n            total += batch.txns[i].amount;\r\n        }\r\n\r\n        /**\r\n         * @dev By combining a `transferFrom` call to itself and then\r\n         * distributing the tokens from its own address using `transfer`,\r\n         * 5'000 gas is saved on each transfer as `allowance` is only\r\n         * touched once.\r\n         */\r\n        token.safeTransferFrom(msg.sender, address(this), total);\r\n\r\n        for (uint256 i; i < length; ++i) {\r\n            token.safeTransfer(batch.txns[i].recipient, batch.txns[i].amount);\r\n        }\r\n    }\r\n}\r\n",
  "sourcePath": "F:\\porjects\\batch_task_forntend_actual\\truffle\\contracts\\BatchDistributor.sol",
  "ast": {
    "absolutePath": "project:/contracts/BatchDistributor.sol",
    "exportedSymbols": {
      "BatchDistributor": [
        1579
      ],
      "EtherTransferFail": [
        1375
      ],
      "IERC20": [
        729
      ],
      "SafeERC20": [
        1081
      ]
    },
    "id": 1580,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1366,
        "literals": [
          "solidity",
          "0.8",
          ".26"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:8"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 1368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 730,
        "src": "60:70:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1367,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 729,
              "src": "68:6:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 1370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1580,
        "sourceUnit": 1082,
        "src": "132:82:8",
        "symbolAliases": [
          {
            "foreign": {
              "id": 1369,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 1081,
              "src": "140:9:8",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "documentation": {
          "id": 1371,
          "nodeType": "StructuredDocumentation",
          "src": "218:125:8",
          "text": " @dev Error that occurs when transferring ether has failed.\n @param emitter The contract that emits the error."
        },
        "errorSelector": "dd74906f",
        "id": 1375,
        "name": "EtherTransferFail",
        "nameLocation": "351:17:8",
        "nodeType": "ErrorDefinition",
        "parameters": {
          "id": 1374,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 1373,
              "mutability": "mutable",
              "name": "emitter",
              "nameLocation": "377:7:8",
              "nodeType": "VariableDeclaration",
              "scope": 1375,
              "src": "369:15:8",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              },
              "typeName": {
                "id": 1372,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "369:7:8",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "368:17:8"
        },
        "src": "345:41:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "BatchDistributor",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 1376,
          "nodeType": "StructuredDocumentation",
          "src": "390:317:8",
          "text": " @title Native and ERC-20 Token Batch Distributor\n @author 0x7761676d69\n @notice Helper smart contract for batch sending both\n native and ERC-20 tokens.\n @dev Since we use nested struct objects, we rely on the ABI coder v2.\n The ABI coder v2 is activated by default since Solidity `v0.8.0`."
        },
        "fullyImplemented": true,
        "id": 1579,
        "linearizedBaseContracts": [
          1579
        ],
        "name": "BatchDistributor",
        "nameLocation": "718:16:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 1380,
            "libraryName": {
              "id": 1377,
              "name": "SafeERC20",
              "nameLocations": [
                "748:9:8"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1081,
              "src": "748:9:8"
            },
            "nodeType": "UsingForDirective",
            "src": "742:27:8",
            "typeName": {
              "id": 1379,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1378,
                "name": "IERC20",
                "nameLocations": [
                  "762:6:8"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 729,
                "src": "762:6:8"
              },
              "referencedDeclaration": 729,
              "src": "762:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$729",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "canonicalName": "BatchDistributor.Transaction",
            "documentation": {
              "id": 1381,
              "nodeType": "StructuredDocumentation",
              "src": "777:73:8",
              "text": " @dev Transaction struct for the transaction payload."
            },
            "id": 1386,
            "members": [
              {
                "constant": false,
                "id": 1383,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "902:9:8",
                "nodeType": "VariableDeclaration",
                "scope": 1386,
                "src": "886:25:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 1382,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "886:15:8",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1385,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "930:6:8",
                "nodeType": "VariableDeclaration",
                "scope": 1386,
                "src": "922:14:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1384,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "922:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Transaction",
            "nameLocation": "863:11:8",
            "nodeType": "StructDefinition",
            "scope": 1579,
            "src": "856:88:8",
            "visibility": "public"
          },
          {
            "canonicalName": "BatchDistributor.Batch",
            "documentation": {
              "id": 1387,
              "nodeType": "StructuredDocumentation",
              "src": "952:69:8",
              "text": " @dev Batch struct for the array of transactions."
            },
            "id": 1392,
            "members": [
              {
                "constant": false,
                "id": 1391,
                "mutability": "mutable",
                "name": "txns",
                "nameLocation": "1065:4:8",
                "nodeType": "VariableDeclaration",
                "scope": 1392,
                "src": "1051:18:8",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_storage_$dyn_storage_ptr",
                  "typeString": "struct BatchDistributor.Transaction[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 1389,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1388,
                      "name": "Transaction",
                      "nameLocations": [
                        "1051:11:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1386,
                      "src": "1051:11:8"
                    },
                    "referencedDeclaration": 1386,
                    "src": "1051:11:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Transaction_$1386_storage_ptr",
                      "typeString": "struct BatchDistributor.Transaction"
                    }
                  },
                  "id": 1390,
                  "nodeType": "ArrayTypeName",
                  "src": "1051:13:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_storage_$dyn_storage_ptr",
                    "typeString": "struct BatchDistributor.Transaction[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Batch",
            "nameLocation": "1034:5:8",
            "nodeType": "StructDefinition",
            "scope": 1579,
            "src": "1027:50:8",
            "visibility": "public"
          },
          {
            "body": {
              "id": 1409,
              "nodeType": "Block",
              "src": "1393:76:8",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 1399,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "1420:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                "typeString": "contract BatchDistributor"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                "typeString": "contract BatchDistributor"
                              }
                            ],
                            "id": 1398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1412:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1397,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1412:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1412:13:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1403,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1437:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1429:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1401,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1429:7:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1404,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1429:10:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1412:27:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706c6f796d656e74206661696c6564",
                        "id": 1406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1441:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb",
                          "typeString": "literal_string \"Deployment failed\""
                        },
                        "value": "Deployment failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fa2295279825fc5c1b0ee87bfb3d9f97e1f777c29c82f8d0a2e2fc2fa6c99dcb",
                          "typeString": "literal_string \"Deployment failed\""
                        }
                      ],
                      "id": 1396,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1404:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1404:57:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1408,
                  "nodeType": "ExpressionStatement",
                  "src": "1404:57:8"
                }
              ]
            },
            "documentation": {
              "id": 1393,
              "nodeType": "StructuredDocumentation",
              "src": "1085:280:8",
              "text": " @dev You can cut out 10 opcodes in the creation-time EVM bytecode\n if you declare a constructor `payable`.\n For more in-depth information see here:\n https://forum.openzeppelin.com/t/a-collection-of-gas-optimisation-tricks/19966/5."
            },
            "id": 1410,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1394,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1382:2:8"
            },
            "returnParameters": {
              "id": 1395,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1393:0:8"
            },
            "scope": 1579,
            "src": "1371:98:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1498,
              "nodeType": "Block",
              "src": "1934:1225:8",
              "statements": [
                {
                  "assignments": [
                    1419
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1419,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "2127:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1498,
                      "src": "2119:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1418,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2119:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev Caching the length in for loops saves 3 additional gas\n for a `calldata` array for each iteration except for the first.",
                  "id": 1423,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 1420,
                        "name": "batch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1414,
                        "src": "2136:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                          "typeString": "struct BatchDistributor.Batch calldata"
                        }
                      },
                      "id": 1421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2142:4:8",
                      "memberName": "txns",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "2136:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                      }
                    },
                    "id": 1422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2147:6:8",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "2136:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2119:34:8"
                },
                {
                  "body": {
                    "id": 1460,
                    "nodeType": "Block",
                    "src": "2378:265:8",
                    "statements": [
                      {
                        "assignments": [
                          1434,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1434,
                            "mutability": "mutable",
                            "name": "sent",
                            "nameLocation": "2463:4:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1460,
                            "src": "2458:9:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1433,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2458:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 1449,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1447,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2563:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1435,
                                      "name": "batch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1414,
                                      "src": "2473:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                                        "typeString": "struct BatchDistributor.Batch calldata"
                                      }
                                    },
                                    "id": 1436,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2479:4:8",
                                    "memberName": "txns",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1391,
                                    "src": "2473:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                                    }
                                  },
                                  "id": 1438,
                                  "indexExpression": {
                                    "id": 1437,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "2484:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2473:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Transaction_$1386_calldata_ptr",
                                    "typeString": "struct BatchDistributor.Transaction calldata"
                                  }
                                },
                                "id": 1439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2487:9:8",
                                "memberName": "recipient",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1383,
                                "src": "2473:23:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2497:4:8",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "2473:28:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1446,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 1441,
                                      "name": "batch",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1414,
                                      "src": "2527:5:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                                        "typeString": "struct BatchDistributor.Batch calldata"
                                      }
                                    },
                                    "id": 1442,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "2533:4:8",
                                    "memberName": "txns",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1391,
                                    "src": "2527:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                                      "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                                    }
                                  },
                                  "id": 1444,
                                  "indexExpression": {
                                    "id": 1443,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1425,
                                    "src": "2538:1:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2527:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Transaction_$1386_calldata_ptr",
                                    "typeString": "struct BatchDistributor.Transaction calldata"
                                  }
                                },
                                "id": 1445,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2541:6:8",
                                "memberName": "amount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1385,
                                "src": "2527:20:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "2473:89:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1448,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2473:93:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2457:109:8"
                      },
                      {
                        "condition": {
                          "id": 1451,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "2585:5:8",
                          "subExpression": {
                            "id": 1450,
                            "name": "sent",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1434,
                            "src": "2586:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1459,
                        "nodeType": "IfStatement",
                        "src": "2581:50:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1455,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "2625:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                      "typeString": "contract BatchDistributor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                      "typeString": "contract BatchDistributor"
                                    }
                                  ],
                                  "id": 1454,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2617:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1453,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2617:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1456,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2617:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1452,
                              "name": "EtherTransferFail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "2599:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 1457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2599:32:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1458,
                          "nodeType": "RevertStatement",
                          "src": "2592:39:8"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1427,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1425,
                      "src": "2361:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1428,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1419,
                      "src": "2365:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2361:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": " @dev If a variable is not set/initialised, it is assumed to have\n the default value. The default value for the `uint` types is 0.",
                  "id": 1461,
                  "initializationExpression": {
                    "assignments": [
                      1425
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1425,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2358:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1461,
                        "src": "2350:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1424,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2350:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1426,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2350:9:8"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "2373:3:8",
                      "subExpression": {
                        "id": 1430,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1425,
                        "src": "2375:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1432,
                    "nodeType": "ExpressionStatement",
                    "src": "2373:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "2345:298:8"
                },
                {
                  "assignments": [
                    1463
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1463,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2663:7:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1498,
                      "src": "2655:15:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1462,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2655:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1469,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1466,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "2681:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                            "typeString": "contract BatchDistributor"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                            "typeString": "contract BatchDistributor"
                          }
                        ],
                        "id": 1465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2673:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1464,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2673:7:8",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2673:13:8",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2687:7:8",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2673:21:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2655:39:8"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1470,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1463,
                      "src": "2709:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1471,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2720:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2709:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1497,
                  "nodeType": "IfStatement",
                  "src": "2705:447:8",
                  "trueBody": {
                    "id": 1496,
                    "nodeType": "Block",
                    "src": "2723:429:8",
                    "statements": [
                      {
                        "assignments": [
                          1474,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1474,
                            "mutability": "mutable",
                            "name": "refunded",
                            "nameLocation": "3013:8:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 1496,
                            "src": "3008:13:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1473,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "3008:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "documentation": " @dev Any wei amount previously forced into this contract (e.g. by\n using the `SELFDESTRUCT` opcode) will be part of the refund transaction.",
                        "id": 1485,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "",
                              "id": 1483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3068:2:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              },
                              "value": ""
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                "typeString": "literal_string \"\""
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                  "typeString": "literal_string \"\""
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 1477,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967281,
                                      "src": "3035:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 1478,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberLocation": "3039:6:8",
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "3035:10:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1476,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3027:8:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 1475,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3027:8:8",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1479,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3027:19:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3047:4:8",
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "3027:24:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 1482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "id": 1481,
                                "name": "balance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1463,
                                "src": "3059:7:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "3027:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 1484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3027:44:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3007:64:8"
                      },
                      {
                        "condition": {
                          "id": 1487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "3090:9:8",
                          "subExpression": {
                            "id": 1486,
                            "name": "refunded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1474,
                            "src": "3091:8:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1495,
                        "nodeType": "IfStatement",
                        "src": "3086:54:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 1491,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "3134:4:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                      "typeString": "contract BatchDistributor"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                                      "typeString": "contract BatchDistributor"
                                    }
                                  ],
                                  "id": 1490,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "3126:7:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1489,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "3126:7:8",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1492,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3126:13:8",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1488,
                              "name": "EtherTransferFail",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "3108:17:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
                                "typeString": "function (address) pure returns (error)"
                              }
                            },
                            "id": 1493,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3108:32:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_error",
                              "typeString": "error"
                            }
                          },
                          "id": 1494,
                          "nodeType": "RevertStatement",
                          "src": "3101:39:8"
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 1411,
              "nodeType": "StructuredDocumentation",
              "src": "1477:387:8",
              "text": " @dev Distributes ether, denominated in wei, to a predefined batch\n of recipient addresses.\n @notice In the event that excessive ether is sent, the residual\n amount is returned back to the `msg.sender`.\n @param batch Nested struct object that contains an array of tuples that\n contain each a recipient address & ether amount in wei."
            },
            "functionSelector": "9d0918b5",
            "id": 1499,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeEther",
            "nameLocation": "1879:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1414,
                  "mutability": "mutable",
                  "name": "batch",
                  "nameLocation": "1910:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1499,
                  "src": "1895:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                    "typeString": "struct BatchDistributor.Batch"
                  },
                  "typeName": {
                    "id": 1413,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1412,
                      "name": "Batch",
                      "nameLocations": [
                        "1895:5:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1392,
                      "src": "1895:5:8"
                    },
                    "referencedDeclaration": 1392,
                    "src": "1895:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Batch_$1392_storage_ptr",
                      "typeString": "struct BatchDistributor.Batch"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1894:22:8"
            },
            "returnParameters": {
              "id": 1416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1934:0:8"
            },
            "scope": 1579,
            "src": "1870:1289:8",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1577,
              "nodeType": "Block",
              "src": "3966:1006:8",
              "statements": [
                {
                  "assignments": [
                    1511
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1511,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "4159:6:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1577,
                      "src": "4151:14:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1510,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4151:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev Caching the length in for loops saves 3 additional gas\n for a `calldata` array for each iteration except for the first.",
                  "id": 1515,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 1512,
                        "name": "batch",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1506,
                        "src": "4168:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                          "typeString": "struct BatchDistributor.Batch calldata"
                        }
                      },
                      "id": 1513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4174:4:8",
                      "memberName": "txns",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1391,
                      "src": "4168:10:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                        "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                      }
                    },
                    "id": 1514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "4179:6:8",
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "4168:17:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4151:34:8"
                },
                {
                  "assignments": [
                    1518
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1518,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "4385:5:8",
                      "nodeType": "VariableDeclaration",
                      "scope": 1577,
                      "src": "4377:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1517,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4377:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "documentation": " @dev If a variable is not set/initialised, it is assumed to have\n the default value. The default value for the `uint` types is 0.",
                  "id": 1519,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4377:13:8"
                },
                {
                  "body": {
                    "id": 1537,
                    "nodeType": "Block",
                    "src": "4434:56:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 1535,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1529,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1518,
                            "src": "4449:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 1530,
                                  "name": "batch",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1506,
                                  "src": "4458:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                                    "typeString": "struct BatchDistributor.Batch calldata"
                                  }
                                },
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4464:4:8",
                                "memberName": "txns",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 1391,
                                "src": "4458:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                                }
                              },
                              "id": 1533,
                              "indexExpression": {
                                "id": 1532,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1521,
                                "src": "4469:1:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4458:13:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Transaction_$1386_calldata_ptr",
                                "typeString": "struct BatchDistributor.Transaction calldata"
                              }
                            },
                            "id": 1534,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4472:6:8",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1385,
                            "src": "4458:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4449:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1536,
                        "nodeType": "ExpressionStatement",
                        "src": "4449:29:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1523,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1521,
                      "src": "4417:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1524,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "4421:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4417:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1538,
                  "initializationExpression": {
                    "assignments": [
                      1521
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1521,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4414:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1538,
                        "src": "4406:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1520,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4406:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1522,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4406:9:8"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4429:3:8",
                      "subExpression": {
                        "id": 1526,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1521,
                        "src": "4431:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1528,
                    "nodeType": "ExpressionStatement",
                    "src": "4429:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4401:89:8"
                },
                {
                  "documentation": " @dev By combining a `transferFrom` call to itself and then\n distributing the tokens from its own address using `transfer`,\n 5'000 gas is saved on each transfer as `allowance` is only\n touched once.",
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1542,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4794:3:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4798:6:8",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4794:10:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1546,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4814:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                              "typeString": "contract BatchDistributor"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_BatchDistributor_$1579",
                              "typeString": "contract BatchDistributor"
                            }
                          ],
                          "id": 1545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4806:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1544,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4806:7:8",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1547,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4806:13:8",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1548,
                        "name": "total",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1518,
                        "src": "4821:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1539,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1503,
                        "src": "4771:5:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$729",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 1541,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4777:16:8",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 868,
                      "src": "4771:22:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 1549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4771:56:8",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1550,
                  "nodeType": "ExpressionStatement",
                  "src": "4771:56:8"
                },
                {
                  "body": {
                    "id": 1575,
                    "nodeType": "Block",
                    "src": "4873:92:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1563,
                                    "name": "batch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1506,
                                    "src": "4907:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                                      "typeString": "struct BatchDistributor.Batch calldata"
                                    }
                                  },
                                  "id": 1564,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4913:4:8",
                                  "memberName": "txns",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1391,
                                  "src": "4907:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                                  }
                                },
                                "id": 1566,
                                "indexExpression": {
                                  "id": 1565,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "4918:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4907:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Transaction_$1386_calldata_ptr",
                                  "typeString": "struct BatchDistributor.Transaction calldata"
                                }
                              },
                              "id": 1567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4921:9:8",
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1383,
                              "src": "4907:23:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 1568,
                                    "name": "batch",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1506,
                                    "src": "4932:5:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                                      "typeString": "struct BatchDistributor.Batch calldata"
                                    }
                                  },
                                  "id": 1569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "4938:4:8",
                                  "memberName": "txns",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1391,
                                  "src": "4932:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Transaction_$1386_calldata_ptr_$dyn_calldata_ptr",
                                    "typeString": "struct BatchDistributor.Transaction calldata[] calldata"
                                  }
                                },
                                "id": 1571,
                                "indexExpression": {
                                  "id": 1570,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1552,
                                  "src": "4943:1:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4932:13:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Transaction_$1386_calldata_ptr",
                                  "typeString": "struct BatchDistributor.Transaction calldata"
                                }
                              },
                              "id": 1572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4946:6:8",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1385,
                              "src": "4932:20:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1560,
                              "name": "token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1503,
                              "src": "4888:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$729",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 1562,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4894:12:8",
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 841,
                            "src": "4888:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$729_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$729_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 1573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4888:65:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1574,
                        "nodeType": "ExpressionStatement",
                        "src": "4888:65:8"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1554,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1552,
                      "src": "4856:1:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 1555,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1511,
                      "src": "4860:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4856:10:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1576,
                  "initializationExpression": {
                    "assignments": [
                      1552
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1552,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4853:1:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 1576,
                        "src": "4845:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1551,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4845:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1553,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4845:9:8"
                  },
                  "isSimpleCounterLoop": true,
                  "loopExpression": {
                    "expression": {
                      "id": 1558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": true,
                      "src": "4868:3:8",
                      "subExpression": {
                        "id": 1557,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1552,
                        "src": "4870:1:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1559,
                    "nodeType": "ExpressionStatement",
                    "src": "4868:3:8"
                  },
                  "nodeType": "ForStatement",
                  "src": "4840:125:8"
                }
              ]
            },
            "documentation": {
              "id": 1500,
              "nodeType": "StructuredDocumentation",
              "src": "3167:723:8",
              "text": " @dev Distributes ERC-20 tokens, denominated in their corresponding\n lowest unit, to a predefined batch of recipient addresses.\n @notice To deal with (potentially) non-compliant ERC-20 tokens that\n do have no return value, we use the `SafeERC20` library for external calls.\n Note: Since we cast the token address into the official ERC-20 interface,\n the use of non-compliant ERC-20 tokens is prevented by design. Nevertheless,\n we keep this guardrail for security reasons.\n @param token ERC-20 token contract address.\n @param batch Nested struct object that contains an array of tuples that\n contain each a recipient address & token amount."
            },
            "functionSelector": "3bd08a79",
            "id": 1578,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "distributeToken",
            "nameLocation": "3905:15:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1503,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3928:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "3921:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$729",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 1502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1501,
                      "name": "IERC20",
                      "nameLocations": [
                        "3921:6:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 729,
                      "src": "3921:6:8"
                    },
                    "referencedDeclaration": 729,
                    "src": "3921:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$729",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1506,
                  "mutability": "mutable",
                  "name": "batch",
                  "nameLocation": "3950:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1578,
                  "src": "3935:20:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Batch_$1392_calldata_ptr",
                    "typeString": "struct BatchDistributor.Batch"
                  },
                  "typeName": {
                    "id": 1505,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1504,
                      "name": "Batch",
                      "nameLocations": [
                        "3935:5:8"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1392,
                      "src": "3935:5:8"
                    },
                    "referencedDeclaration": 1392,
                    "src": "3935:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Batch_$1392_storage_ptr",
                      "typeString": "struct BatchDistributor.Batch"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3920:36:8"
            },
            "returnParameters": {
              "id": 1508,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3966:0:8"
            },
            "scope": 1579,
            "src": "3896:1076:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1580,
        "src": "709:4266:8",
        "usedErrors": [
          808,
          1089,
          1094,
          1097,
          1375
        ],
        "usedEvents": []
      }
    ],
    "src": "33:4944:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.26+commit.8a97fa7a.Emscripten.clang"
  },
  "networks": {
    "1337": {
      "events": {},
      "links": {},
      "address": "0x4C0655572235432f5268b7F325BFAD5cDEB2d671",
      "transactionHash": "0x27666a9e0e8059cad912b2afc7cf8ded344d21e9181cff2d23a0ad1c62a49c96"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-07-31T02:00:22.248Z",
  "networkType": "ethereum",
  "devdoc": {
    "author": "0x7761676d69",
    "details": "Since we use nested struct objects, we rely on the ABI coder v2. The ABI coder v2 is activated by default since Solidity `v0.8.0`.",
    "errors": {
      "AddressEmptyCode(address)": [
        {
          "details": "There's no code at `target` (it is not a contract)."
        }
      ],
      "AddressInsufficientBalance(address)": [
        {
          "details": "The ETH balance of the account is not enough to perform the operation."
        }
      ],
      "EtherTransferFail(address)": [
        {
          "details": "Error that occurs when transferring ether has failed.",
          "params": {
            "emitter": "The contract that emits the error."
          }
        }
      ],
      "FailedInnerCall()": [
        {
          "details": "A call to an address target failed. The target may have reverted."
        }
      ],
      "SafeERC20FailedOperation(address)": [
        {
          "details": "An operation with an ERC20 token failed."
        }
      ]
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "You can cut out 10 opcodes in the creation-time EVM bytecode if you declare a constructor `payable`. For more in-depth information see here: https://forum.openzeppelin.com/t/a-collection-of-gas-optimisation-tricks/19966/5."
      },
      "distributeEther(((address,uint256)[]))": {
        "details": "Distributes ether, denominated in wei, to a predefined batch of recipient addresses.",
        "params": {
          "batch": "Nested struct object that contains an array of tuples that contain each a recipient address & ether amount in wei."
        }
      },
      "distributeToken(address,((address,uint256)[]))": {
        "details": "Distributes ERC-20 tokens, denominated in their corresponding lowest unit, to a predefined batch of recipient addresses.",
        "params": {
          "batch": "Nested struct object that contains an array of tuples that contain each a recipient address & token amount.",
          "token": "ERC-20 token contract address."
        }
      }
    },
    "title": "Native and ERC-20 Token Batch Distributor",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "distributeEther(((address,uint256)[]))": {
        "notice": "In the event that excessive ether is sent, the residual amount is returned back to the `msg.sender`."
      },
      "distributeToken(address,((address,uint256)[]))": {
        "notice": "To deal with (potentially) non-compliant ERC-20 tokens that do have no return value, we use the `SafeERC20` library for external calls. Note: Since we cast the token address into the official ERC-20 interface, the use of non-compliant ERC-20 tokens is prevented by design. Nevertheless, we keep this guardrail for security reasons."
      }
    },
    "notice": "Helper smart contract for batch sending both native and ERC-20 tokens.",
    "version": 1
  }
}